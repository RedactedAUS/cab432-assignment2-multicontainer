version: '3.8'
services:
  app:
    build: .
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - PORT=3000
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID}
      - COGNITO_REGION=${COGNITO_REGION}
      - RDS_HOSTNAME=${RDS_HOSTNAME}
      - RDS_PORT=${RDS_PORT}
      - RDS_USERNAME=${RDS_USERNAME}
      - RDS_PASSWORD=${RDS_PASSWORD}
      - RDS_DB_NAME=${RDS_DB_NAME}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    volumes:
      - ./uploads:/app/uploads
      - ./processed:/app/processed
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - app-network
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network
volumes:
  redis-data:
    driver: local
networks:
  app-network:
    driver: bridge
